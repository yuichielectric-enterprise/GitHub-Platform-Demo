name: "Teardown Azure RG from Issue Close"

# on: 
#   issues:
#     types: [closed]  

jobs:
  permission:
    name: permission check
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'Terraform Request for Azure App Service') && github.actor == 'James-LeHa'
    steps:
    - name: check permission
      run: echo permission pass

  issue_ops_teardown:
    name: "Teardown Azure RG"
    needs: permission
    if: contains(github.event.issue.labels.*.name, 'terraform') 
    runs-on: ubuntu-latest
    outputs:
        app_service_name: ${{ steps.set_env_values.outputs.app_service_name }}
        requesting_team: ${{ steps.set_env_values.outputs.requesting_team }}

    steps:

      - name: Checkout Actions Source
        uses: actions/checkout@v2

      - name: Extract Issue Demo Specification
        id: issue_body
        uses: peter-murray/issue-body-parser-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_id: ${{ github.event.issue.number }}

      - name: Set JSON Variables as Output Values
        id: set_env_values
        run: | 
          for s in $(echo '${{ steps.issue_body.outputs.payload }}' | jq -r "to_entries|map(\"\(.key)::\(.value|tostring)\")|.[]" ); do
          echo '::set-output name='"$s"''
          done

      - name: Print JSON Variables from Issue
        run: |
          echo "The requesting Team Name: ${{ steps.set_env_values.outputs.requesting_team }}"
          echo "The TF Cloud State: ${{ steps.set_env_values.outputs.tf_cloud_state }}"

      - name: Set App Service Output Step
        id: app_serviceName
        run: echo "::set-output name=app_serviceName::${{ steps.set_env_values.outputs.app_service_name }}"

      - name: Set Requesting Team Output Step
        id: requesting_teamName
        run: echo "::set-output name=requesting_teamName::${{ steps.set_env_values.outputs.requesting_team }}"

      - name: Check if using TF State
        if: steps.set_env_values.outputs.tf_cloud_state == 'true'
        run: |
          echo "Terraform State IS being used. Exiting..."
          exit 1

      - name: Print JSON Variables from Issue
        run: |
          echo "The requesting Team Name: ${{ steps.set_env_values.outputs.requesting_team }}"

      - uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDS_MGMT }}
          
          ## Delete the Azure Resource Group with optional [--yes] parameter to NOT prompt for confirmation
      - run: |
          az group delete -n '${{ steps.set_env_values.outputs.requesting_team }}-rg' --yes

  cleanup-envs-and-deployments:
    name: Cleanup Env and Deployments
    runs-on: ubuntu-latest
    needs: issue_ops_teardown

    strategy:
      matrix:
        env: ['UAT', 'STAGING']
    
    steps:
      - name: Delete Env
        uses: satak/webrequest-action@master
        with:
          url: https://api.github.com/repos/octodemo/GitHub-Platform-Demo/environments/${{ needs.issue_ops_teardown.outputs.requesting_team }}-${{ matrix.env }}
          method: DELETE
          headers: '{"Authorization": "Bearer ${{ secrets.GHCR_PASSWORD }}"}'

      - name: Delete Deployment
        uses: strumwolf/delete-deployment-environment@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: ${{ needs.issue_ops_teardown.outputs.requesting_team }}-${{ matrix.env }}

  
